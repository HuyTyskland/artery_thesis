[General]
network = artery.inet.World

*.traci.core.version = -1
*.traci.launcher.typename = "PosixLauncher"
*.traci.launcher.sumocfg = "highway.sumocfg"
#*.traci.launcher.sumo = "sumo-gui"


*.node[*].middleware.updateInternal = 0.1s
*.node[*].middleware.datetime = "2018-3-19 10:00:00"
*.node[*].middleware.services = xmldoc("services.xml")

**.wlan[*].radio.receiver.sensitivity = -85 dBm

*.node[*].wlan[0].mac.rx.ChannelLoad.result-recording-modes = histogram,vector

*.traci.mapper.vehicleTypes = xmldoc("vehicles.xml")

*.radioMedium.pathLossType = "FreeSpacePathLoss"

###################### Power adaptation
[Config sparse_power_adaptation]
*.node[4..7].wlan[*].radio.transmitter.power = 0.041 mW
*.node[14..15].wlan[*].radio.transmitter.power = 0.041 mW
*.node[22..25].wlan[*].radio.transmitter.power = 0.041 mW
*.node[32..33].wlan[*].radio.transmitter.power = 0.041 mW
*.node[40..43].wlan[*].radio.transmitter.power = 0.041 mW
*.node[50..51].wlan[*].radio.transmitter.power = 0.041 mW
*.node[58..61].wlan[*].radio.transmitter.power = 0.041 mW
*.node[68..69].wlan[*].radio.transmitter.power = 0.041 mW
*.node[76..79].wlan[*].radio.transmitter.power = 0.041 mW
*.node[86..87].wlan[*].radio.transmitter.power = 0.041 mW
*.node[94..97].wlan[*].radio.transmitter.power = 0.041 mW
*.node[104..105].wlan[*].radio.transmitter.power = 0.041 mW
*.node[112..115].wlan[*].radio.transmitter.power = 0.041 mW
*.node[122..123].wlan[*].radio.transmitter.power = 0.041 mW
*.node[130..133].wlan[*].radio.transmitter.power = 0.041 mW
*.node[8..11].wlan[*].radio.transmitter.power = 0.14 mW
*.node[16..17].wlan[*].radio.transmitter.power = 0.14 mW
*.node[26..29].wlan[*].radio.transmitter.power = 0.14 mW
*.node[34..35].wlan[*].radio.transmitter.power = 0.14 mW
*.node[44..47].wlan[*].radio.transmitter.power = 0.14 mW
*.node[52..53].wlan[*].radio.transmitter.power = 0.14 mW
*.node[62..65].wlan[*].radio.transmitter.power = 0.14 mW
*.node[70..69].wlan[*].radio.transmitter.power = 0.14 mW
*.node[80..83].wlan[*].radio.transmitter.power = 0.14 mW
*.node[88..89].wlan[*].radio.transmitter.power = 0.14 mW
*.node[98..101].wlan[*].radio.transmitter.power = 0.14 mW
*.node[106..107].wlan[*].radio.transmitter.power = 0.14 mW
*.node[116..119].wlan[*].radio.transmitter.power = 0.14 mW
*.node[124..125].wlan[*].radio.transmitter.power = 0.14 mW
*.node[130..137].wlan[*].radio.transmitter.power = 0.14 mW
*.node[*].wlan[*].radio.transmitter.power = 200 mW

[Config dense_power_adaptation]
*.node[4..7].wlan[*].radio.transmitter.power = 0.041 mW
*.node[14..15].wlan[*].radio.transmitter.power = 0.041 mW
*.node[22..25].wlan[*].radio.transmitter.power = 0.041 mW
*.node[32..33].wlan[*].radio.transmitter.power = 0.041 mW
*.node[40..43].wlan[*].radio.transmitter.power = 0.041 mW
*.node[50..51].wlan[*].radio.transmitter.power = 0.041 mW
*.node[58..61].wlan[*].radio.transmitter.power = 0.041 mW
*.node[68..69].wlan[*].radio.transmitter.power = 0.041 mW
*.node[76..79].wlan[*].radio.transmitter.power = 0.041 mW
*.node[86..87].wlan[*].radio.transmitter.power = 0.041 mW
*.node[94..97].wlan[*].radio.transmitter.power = 0.041 mW
*.node[104..105].wlan[*].radio.transmitter.power = 0.041 mW
*.node[112..115].wlan[*].radio.transmitter.power = 0.041 mW
*.node[122..123].wlan[*].radio.transmitter.power = 0.041 mW
*.node[130..133].wlan[*].radio.transmitter.power = 0.041 mW
*.node[140..141].wlan[*].radio.transmitter.power = 0.041 mW
*.node[148..151].wlan[*].radio.transmitter.power = 0.041 mW
*.node[158..159].wlan[*].radio.transmitter.power = 0.041 mW
*.node[166..167].wlan[*].radio.transmitter.power = 0.041 mW
*.node[8..11].wlan[*].radio.transmitter.power = 0.14 mW
*.node[16..17].wlan[*].radio.transmitter.power = 0.14 mW
*.node[26..29].wlan[*].radio.transmitter.power = 0.14 mW
*.node[34..35].wlan[*].radio.transmitter.power = 0.14 mW
*.node[44..47].wlan[*].radio.transmitter.power = 0.14 mW
*.node[52..53].wlan[*].radio.transmitter.power = 0.14 mW
*.node[62..65].wlan[*].radio.transmitter.power = 0.14 mW
*.node[70..69].wlan[*].radio.transmitter.power = 0.14 mW
*.node[80..83].wlan[*].radio.transmitter.power = 0.14 mW
*.node[88..89].wlan[*].radio.transmitter.power = 0.14 mW
*.node[98..101].wlan[*].radio.transmitter.power = 0.14 mW
*.node[106..107].wlan[*].radio.transmitter.power = 0.14 mW
*.node[116..119].wlan[*].radio.transmitter.power = 0.14 mW
*.node[124..125].wlan[*].radio.transmitter.power = 0.14 mW
*.node[134..137].wlan[*].radio.transmitter.power = 0.14 mW
*.node[142..143].wlan[*].radio.transmitter.power = 0.14 mW
*.node[152..155].wlan[*].radio.transmitter.power = 0.14 mW
*.node[160..161].wlan[*].radio.transmitter.power = 0.14 mW
*.node[170..173].wlan[*].radio.transmitter.power = 0.14 mW
*.node[*].wlan[*].radio.transmitter.power = 200 mW

###################### CAM Rate adaptation
################ Sparse LL&PL 0.4
[Config CAM_rate_04]
*.node[*].middleware.CaService.fixedRate = true
*.node[0..3].middleware.CaService.minInterval = 0.4 s
*.node[12..13].middleware.CaService.minInterval = 0.4 s
*.node[18..21].middleware.CaService.minInterval = 0.4 s
*.node[30..31].middleware.CaService.minInterval = 0.4 s
*.node[36..39].middleware.CaService.minInterval = 0.4 s
*.node[48..49].middleware.CaService.minInterval = 0.4 s
*.node[54..57].middleware.CaService.minInterval = 0.4 s
*.node[66..67].middleware.CaService.minInterval = 0.4 s
*.node[72..75].middleware.CaService.minInterval = 0.4 s
*.node[84..85].middleware.CaService.minInterval = 0.4 s
*.node[90..93].middleware.CaService.minInterval = 0.4 s
*.node[102..103].middleware.CaService.minInterval = 0.4 s
*.node[108..111].middleware.CaService.minInterval = 0.4 s
*.node[120..121].middleware.CaService.minInterval = 0.4 s
*.node[126..129].middleware.CaService.minInterval = 0.4 s
*.node[*].middleware.CaService.minInterval = 0.8 s

################ Sparse LL&PL 0.2
[Config CAM_rate_02]
*.node[*].middleware.CaService.fixedRate = true
*.node[0..3].middleware.CaService.minInterval = 0.2 s
*.node[12..13].middleware.CaService.minInterval = 0.2 s
*.node[18..21].middleware.CaService.minInterval = 0.2 s
*.node[30..31].middleware.CaService.minInterval = 0.2 s
*.node[36..39].middleware.CaService.minInterval = 0.2 s
*.node[48..49].middleware.CaService.minInterval = 0.2 s
*.node[54..57].middleware.CaService.minInterval = 0.2 s
*.node[66..67].middleware.CaService.minInterval = 0.2 s
*.node[72..75].middleware.CaService.minInterval = 0.2 s
*.node[84..85].middleware.CaService.minInterval = 0.2 s
*.node[90..93].middleware.CaService.minInterval = 0.2 s
*.node[102..103].middleware.CaService.minInterval = 0.2 s
*.node[108..111].middleware.CaService.minInterval = 0.2 s
*.node[120..121].middleware.CaService.minInterval = 0.2 s
*.node[126..129].middleware.CaService.minInterval = 0.2 s
*.node[*].middleware.CaService.minInterval = 0.4 s

################ Sparse LL&PL 0.1
[Config CAM_rate_01]
*.node[*].middleware.CaService.fixedRate = true
*.node[0..3].middleware.CaService.minInterval = 0.1 s
*.node[12..13].middleware.CaService.minInterval = 0.1 s
*.node[18..21].middleware.CaService.minInterval = 0.1 s
*.node[30..31].middleware.CaService.minInterval = 0.1 s
*.node[36..39].middleware.CaService.minInterval = 0.1 s
*.node[48..49].middleware.CaService.minInterval = 0.1 s
*.node[54..57].middleware.CaService.minInterval = 0.1 s
*.node[66..67].middleware.CaService.minInterval = 0.1 s
*.node[72..75].middleware.CaService.minInterval = 0.1 s
*.node[84..85].middleware.CaService.minInterval = 0.1 s
*.node[90..93].middleware.CaService.minInterval = 0.1 s
*.node[102..103].middleware.CaService.minInterval = 0.1 s
*.node[108..111].middleware.CaService.minInterval = 0.1 s
*.node[120..121].middleware.CaService.minInterval = 0.1 s
*.node[126..129].middleware.CaService.minInterval = 0.1 s
*.node[*].middleware.CaService.minInterval = 0.2 s

################ Sparse LL&PL 0.05
[Config CAM_rate_005]
*.node[*].middleware.CaService.fixedRate = true
*.node[0..3].middleware.CaService.minInterval = 0.05 s
*.node[12..13].middleware.CaService.minInterval = 0.05 s
*.node[18..21].middleware.CaService.minInterval = 0.05 s
*.node[30..31].middleware.CaService.minInterval = 0.05 s
*.node[36..39].middleware.CaService.minInterval = 0.05 s
*.node[48..49].middleware.CaService.minInterval = 0.05 s
*.node[54..57].middleware.CaService.minInterval = 0.05 s
*.node[66..67].middleware.CaService.minInterval = 0.05 s
*.node[72..75].middleware.CaService.minInterval = 0.05 s
*.node[84..85].middleware.CaService.minInterval = 0.05 s
*.node[90..93].middleware.CaService.minInterval = 0.05 s
*.node[102..103].middleware.CaService.minInterval = 0.05 s
*.node[108..111].middleware.CaService.minInterval = 0.05 s
*.node[120..121].middleware.CaService.minInterval = 0.05 s
*.node[126..129].middleware.CaService.minInterval = 0.05 s
*.node[*].middleware.CaService.minInterval = 0.1 s

############## CAM rate for standard reactive
[Config standard_CAMpriority]
*.node[0..3].middleware.CaService.maxInterval = 0.5 s
*.node[12..13].middleware.CaService.maxInterval = 0.5 s
*.node[18..21].middleware.CaService.maxInterval = 0.5 s
*.node[30..31].middleware.CaService.maxInterval = 0.5 s
*.node[36..39].middleware.CaService.maxInterval = 0.5 s
*.node[48..49].middleware.CaService.maxInterval = 0.5 s
*.node[54..57].middleware.CaService.maxInterval = 0.5 s
*.node[66..67].middleware.CaService.maxInterval = 0.5 s
*.node[72..75].middleware.CaService.maxInterval = 0.5 s
*.node[84..85].middleware.CaService.maxInterval = 0.5 s
*.node[90..93].middleware.CaService.maxInterval = 0.5 s
*.node[102..103].middleware.CaService.maxInterval = 0.5 s
*.node[108..111].middleware.CaService.maxInterval = 0.5 s
*.node[120..121].middleware.CaService.maxInterval = 0.5 s
*.node[126..129].middleware.CaService.maxInterval = 0.5 s

################### CAM rate for follow-up experiments
############## Reactive follow-up
## Old: PL&LL - 0.2s + M - 0.4s ----->>>>> New: PL&LL - 0.1s + M - 0.4s
[Config PLLL01M04]
*.node[*].middleware.CaService.fixedRate = true
*.node[0..3].middleware.CaService.minInterval = 0.1 s
*.node[12..13].middleware.CaService.minInterval = 0.1 s
*.node[18..21].middleware.CaService.minInterval = 0.1 s
*.node[30..31].middleware.CaService.minInterval = 0.1 s
*.node[36..39].middleware.CaService.minInterval = 0.1 s
*.node[48..49].middleware.CaService.minInterval = 0.1 s
*.node[54..57].middleware.CaService.minInterval = 0.1 s
*.node[66..67].middleware.CaService.minInterval = 0.1 s
*.node[72..75].middleware.CaService.minInterval = 0.1 s
*.node[84..85].middleware.CaService.minInterval = 0.1 s
*.node[90..93].middleware.CaService.minInterval = 0.1 s
*.node[102..103].middleware.CaService.minInterval = 0.1 s
*.node[108..111].middleware.CaService.minInterval = 0.1 s
*.node[120..121].middleware.CaService.minInterval = 0.1 s
*.node[126..129].middleware.CaService.minInterval = 0.1 s
*.node[*].middleware.CaService.minInterval = 0.4 s
## Old: PL&LL - 0.2s + M - 0.4s ----->>>>> New: PL&LL - 0.05s + M - 0.4s
[Config PLLL005M04]
*.node[*].middleware.CaService.fixedRate = true
*.node[0..3].middleware.CaService.minInterval = 0.05 s
*.node[12..13].middleware.CaService.minInterval = 0.05 s
*.node[18..21].middleware.CaService.minInterval = 0.05 s
*.node[30..31].middleware.CaService.minInterval = 0.05 s
*.node[36..39].middleware.CaService.minInterval = 0.05 s
*.node[48..49].middleware.CaService.minInterval = 0.05 s
*.node[54..57].middleware.CaService.minInterval = 0.05 s
*.node[66..67].middleware.CaService.minInterval = 0.05 s
*.node[72..75].middleware.CaService.minInterval = 0.05 s
*.node[84..85].middleware.CaService.minInterval = 0.05 s
*.node[90..93].middleware.CaService.minInterval = 0.05 s
*.node[102..103].middleware.CaService.minInterval = 0.05 s
*.node[108..111].middleware.CaService.minInterval = 0.05 s
*.node[120..121].middleware.CaService.minInterval = 0.05 s
*.node[126..129].middleware.CaService.minInterval = 0.05 s
*.node[*].middleware.CaService.minInterval = 0.4 s
## Old: PL&LL - 0.1s + M - 0.2s ----->>>>> New: PL&LL - 0.05s + M - 0.2s
[Config PLLL005M02]
*.node[*].middleware.CaService.fixedRate = true
*.node[0..3].middleware.CaService.minInterval = 0.05 s
*.node[12..13].middleware.CaService.minInterval = 0.05 s
*.node[18..21].middleware.CaService.minInterval = 0.05 s
*.node[30..31].middleware.CaService.minInterval = 0.05 s
*.node[36..39].middleware.CaService.minInterval = 0.05 s
*.node[48..49].middleware.CaService.minInterval = 0.05 s
*.node[54..57].middleware.CaService.minInterval = 0.05 s
*.node[66..67].middleware.CaService.minInterval = 0.05 s
*.node[72..75].middleware.CaService.minInterval = 0.05 s
*.node[84..85].middleware.CaService.minInterval = 0.05 s
*.node[90..93].middleware.CaService.minInterval = 0.05 s
*.node[102..103].middleware.CaService.minInterval = 0.05 s
*.node[108..111].middleware.CaService.minInterval = 0.05 s
*.node[120..121].middleware.CaService.minInterval = 0.05 s
*.node[126..129].middleware.CaService.minInterval = 0.05 s
*.node[*].middleware.CaService.minInterval = 0.2 s

################ Message priority
[Config messagePriority]
*.node[0..3].middleware.CaService.isLowPriority = false
*.node[12..13].middleware.CaService.isLowPriority = false
*.node[18..21].middleware.CaService.isLowPriority = false
*.node[30..31].middleware.CaService.isLowPriority = false
*.node[36..39].middleware.CaService.isLowPriority = false
*.node[48..49].middleware.CaService.isLowPriority = false
*.node[54..57].middleware.CaService.isLowPriority = false
*.node[66..67].middleware.CaService.isLowPriority = false
*.node[72..75].middleware.CaService.isLowPriority = false
*.node[84..85].middleware.CaService.isLowPriority = false
*.node[90..93].middleware.CaService.isLowPriority = false
*.node[102..103].middleware.CaService.isLowPriority = false
*.node[108..111].middleware.CaService.isLowPriority = false
*.node[120..121].middleware.CaService.isLowPriority = false
*.node[126..129].middleware.CaService.isLowPriority = false

############################ Reactive Approach section
[Config standardCase_reactive]
*.node[*].wlan[*].radio.transmitter.power = 200 mW

[Config adaptation_reactive]
extends = sparse_power_adaptation, standard_CAMpriority

####### Sparse
[Config fixed_rate_04s_without]
extends = standardCase_reactive
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.4 s

[Config fixed_rate_04s_with]
extends = sparse_power_adaptation, CAM_rate_04

[Config fixed_rate_02s_without]
extends = standardCase_reactive
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.2 s

[Config fixed_rate_02s_with]
extends = sparse_power_adaptation, CAM_rate_02

[Config fixed_rate_01s_without]
extends = standardCase_reactive
*.node[*].middleware.CaService.minInterval = 0.1 s
*.node[*].middleware.CaService.fixedRate = true

[Config fixed_rate_01s_with]
extends = sparse_power_adaptation, CAM_rate_01

[Config fixed_rate_005s_without]
extends = standardCase_reactive
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.05 s

[Config fixed_rate_005s_with]
extends = sparse_power_adaptation, CAM_rate_005

###### Reactive follow-up experiments
[Config FollowupReactive_PLLL01M04]
extends = sparse_power_adaptation, PLLL01M04

[Config FollowupReactive_PLLL005M04]
extends = sparse_power_adaptation, PLLL005M04

[Config FollowupReactive_PLLL005M02]
extends = sparse_power_adaptation, PLLL005M02

####### Dense density
[Config dense_fixed_rate_04s_with]
extends = dense_power_adaptation, fixed_rate_04s_without

[Config dense_fixed_rate_02s_with]
extends = dense_power_adaptation, fixed_rate_02s_without

[Config dense_fixed_rate_01s_with]
extends = dense_power_adaptation, fixed_rate_01s_without

[Config dense_fixed_rate_005s_with]
extends = dense_power_adaptation, fixed_rate_005s_without

########################################### Adaptive Approach section
##################### Without adaptation
[Config standardCase_adaptive]                                  
*.node[*].wlan[*].radio.transmitter.power = 200 mW
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.68

[Config standardCase_adaptive_limeric79]
*.node[*].wlan[*].radio.transmitter.power = 200 mW
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.79

[Config standardCase_adaptive_dualAlpha]
*.node[*].wlan[*].radio.transmitter.power = 200 mW
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.enableDualAlpha = true
**.vanetza[*].dcc.targetCbr = 0.68

######### Extreme case for testing adaptability
##### Fixed rate without adaptation 0.4s
[Config standardCase_adaptive_04]
extends = standardCase_adaptive
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.4 s

[Config standardCase_adaptive_limeric79_04]
extends = standardCase_adaptive_limeric79
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.4 s

[Config standardCase_adaptive_dualAlpha_04]
extends = standardCase_adaptive_dualAlpha
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.4 s

##### Fixed rate without adaptation 0.2s
[Config standardCase_adaptive_02]
extends = standardCase_adaptive
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.2 s

[Config standardCase_adaptive_limeric79_02]
extends = standardCase_adaptive_limeric79
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.2 s

[Config standardCase_adaptive_dualAlpha_02]
extends = standardCase_adaptive_dualAlpha
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.2 s

##### Fixed rate without adaptation 0.1s
[Config standardCase_adaptive_01]
extends = standardCase_adaptive
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.1 s

[Config standardCase_adaptive_limeric79_01]
extends = standardCase_adaptive_limeric79
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.1 s

[Config standardCase_adaptive_dualAlpha_01]
extends = standardCase_adaptive_dualAlpha
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.1 s

##### Fixed rate without adaptation 0.05s
[Config standardCase_adaptive_005]
extends = standardCase_adaptive
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.05 s

[Config standardCase_adaptive_limeric79_005]
extends = standardCase_adaptive_limeric79
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.05 s

[Config standardCase_adaptive_dualAlpha_005]
extends = standardCase_adaptive_dualAlpha
*.node[*].middleware.CaService.fixedRate = true
*.node[*].middleware.CaService.minInterval = 0.05 s

##################### With adaptation
#### Normal adaptive with adaptation
[Config adaptive_adaptation]
extends = standard_CAMpriority, sparse_power_adaptation
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.68

[Config adaptive_Limeric79_adaptation]
extends = standard_CAMpriority, sparse_power_adaptation
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.79

[Config adaptive_dualAlpha_adaptation]
extends = standard_CAMpriority, sparse_power_adaptation
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.enableDualAlpha = true
**.vanetza[*].dcc.targetCbr = 0.68

#### Adaptive with adaptation fixed rate 0.4s
[Config adaptive_adaptation_04]
extends = sparse_power_adaptation, CAM_rate_04
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.68

[Config adaptive_limeric79_adaptation_04]
extends = sparse_power_adaptation, CAM_rate_04
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.79

[Config adaptive_dualAlpha_adaptation_04]
extends = sparse_power_adaptation, CAM_rate_04
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.enableDualAlpha = true
**.vanetza[*].dcc.targetCbr = 0.68

#### Adaptive with adaptation fixed rate 0.2s
[Config adaptive_adaptation_02]
extends = sparse_power_adaptation, CAM_rate_02
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.68

[Config adaptive_limeric79_adaptation_02]
extends = sparse_power_adaptation, CAM_rate_02
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.79

[Config adaptive_dualAlpha_adaptation_02]
extends = sparse_power_adaptation, CAM_rate_02
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.enableDualAlpha = true
**.vanetza[*].dcc.targetCbr = 0.68

#### Adaptive with adaptation fixed rate 0.1s
[Config adaptive_adaptation_01_CBR18]
extends = sparse_power_adaptation, CAM_rate_01
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.18

[Config adaptive_limeric79_adaptation_01] 
extends = sparse_power_adaptation, CAM_rate_01
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.79

[Config adaptive_dualAlpha_adaptation_01]
extends = sparse_power_adaptation, CAM_rate_01
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.enableDualAlpha = true
**.vanetza[*].dcc.targetCbr = 0.68

################# Followup adaptive experiment
# Standard ETSI DCC only
[Config FollowupAdaptive_PLLL01M04]
extends = PLLL01M04, sparse_power_adaptation
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.68

[Config FollowupAdaptive_PLLL005M04]
extends = PLLL005M04, sparse_power_adaptation
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.68

[Config FollowupAdaptive_PLLL005M02] 
extends = PLLL005M02, sparse_power_adaptation
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.68

#### adaptive with adaptation and high load: need to extend the road to 2km
[Config adaptive_adaptation_005]
extends = sparse_power_adaptation, CAM_rate_005
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.68

[Config adaptive_limeric79_adaptation_005]                                        
extends = sparse_power_adaptation, CAM_rate_005
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.79

[Config adaptive_dualAlpha_adaptation_005]
extends = sparse_power_adaptation, CAM_rate_005
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.enableDualAlpha = true
**.vanetza[*].dcc.targetCbr = 0.68

###########################################################################
################################ ALPHA AND BETA ADAPTATION
################### sparse density
[Config alpha_beta_adaptation_CBR18]
**.vanetza[*].dcc.typename = LimericDccEntity
**.vanetza[*].dcc.targetCbr = 0.18
####### ALPHA for platoon members
*.node[4..7].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[14..15].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[22..25].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[32..33].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[40..43].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[50..51].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[58..61].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[68..69].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[76..79].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[86..87].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[94..97].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[104..105].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[112..115].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[122..123].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[130..133].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[8..11].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[16..17].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[26..29].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[34..35].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[44..47].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[52..53].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[62..65].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[70..69].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[80..83].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[88..89].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[98..101].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[106..107].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[116..119].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[124..125].vanetza[*].dcc.adaptedAlpha = 0.1
*.node[130..137].vanetza[*].dcc.adaptedAlpha = 0.1

###### BETA for platoon members
*.node[4..7].vanetza[*].dcc.adaptedBeta = 0.033
*.node[14..15].vanetza[*].dcc.adaptedBeta = 0.033
*.node[22..25].vanetza[*].dcc.adaptedBeta = 0.033
*.node[32..33].vanetza[*].dcc.adaptedBeta = 0.033
*.node[40..43].vanetza[*].dcc.adaptedBeta = 0.033
*.node[50..51].vanetza[*].dcc.adaptedBeta = 0.033
*.node[58..61].vanetza[*].dcc.adaptedBeta = 0.033
*.node[68..69].vanetza[*].dcc.adaptedBeta = 0.033
*.node[76..79].vanetza[*].dcc.adaptedBeta = 0.033
*.node[86..87].vanetza[*].dcc.adaptedBeta = 0.033
*.node[94..97].vanetza[*].dcc.adaptedBeta = 0.033
*.node[104..105].vanetza[*].dcc.adaptedBeta = 0.033
*.node[112..115].vanetza[*].dcc.adaptedBeta = 0.033
*.node[122..123].vanetza[*].dcc.adaptedBeta = 0.033
*.node[130..133].vanetza[*].dcc.adaptedBeta = 0.033
*.node[8..11].vanetza[*].dcc.adaptedBeta = 0.033
*.node[16..17].vanetza[*].dcc.adaptedBeta = 0.033
*.node[26..29].vanetza[*].dcc.adaptedBeta = 0.033
*.node[34..35].vanetza[*].dcc.adaptedBeta = 0.033
*.node[44..47].vanetza[*].dcc.adaptedBeta = 0.033
*.node[52..53].vanetza[*].dcc.adaptedBeta = 0.033
*.node[62..65].vanetza[*].dcc.adaptedBeta = 0.033
*.node[70..69].vanetza[*].dcc.adaptedBeta = 0.033
*.node[80..83].vanetza[*].dcc.adaptedBeta = 0.033
*.node[88..89].vanetza[*].dcc.adaptedBeta = 0.033
*.node[98..101].vanetza[*].dcc.adaptedBeta = 0.033
*.node[106..107].vanetza[*].dcc.adaptedBeta = 0.033
*.node[116..119].vanetza[*].dcc.adaptedBeta = 0.033
*.node[124..125].vanetza[*].dcc.adaptedBeta = 0.033
*.node[130..137].vanetza[*].dcc.adaptedBeta = 0.033

###### BETA for platoon leader/lane leader/non-platoon vehicle
*.node[0..3].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[12..13].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[18..21].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[30..31].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[36..39].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[48..49].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[54..57].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[66..67].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[72..75].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[84..85].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[90..93].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[102..103].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[108..111].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[120..121].vanetza[*].dcc.adaptedBeta = 0.0036
*.node[126..129].vanetza[*].dcc.adaptedBeta = 0.0036


[Config alpha_beta_01_CBR18]
extends = sparse_power_adaptation, CAM_rate_01, alpha_beta_adaptation_CBR18